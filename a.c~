#include <stdio.h>
#include <stdint.h>

static int64_t __$bplc_fact_INT_INT(int64_t);

int64_t __$bplc_fact_INT_INT(int64_t n){
printf("%s%llx%s", "malloc\t\t\t\t#", n, "\n"); /* print("malloc\t\t\t\t#",n,"\n"); */
char* __$deferred_param_0="free\t\t\t\t#";int64_t __$deferred_param_1=n;char* __$deferred_param_2="\n"; /* deferprint("free\t\t\t\t#",n,"\n"); */
printf("%s%llx%s", "init mem\t\t\t#", n, "\n"); /* print("init mem\t\t\t#",n,"\n"); */
if (n) {
printf("%s%llx%s", "lock mutex\t\t\t#", n, "\n"); /* print("lock mutex\t\t\t#",n,"\n"); */
char* __$deferred_param_3="unlock mutex\t\t#";int64_t __$deferred_param_4=n;char* __$deferred_param_5="\n"; /* deferprint("unlock mutex\t\t#",n,"\n"); */
if (n-1U) {
printf("%s%llx%s", "branch a: use mem\t#", n, "\n"); /* print("branch a: use mem\t#",n,"\n"); */
printf("%s%llx%s", __$deferred_param_3,__$deferred_param_4,__$deferred_param_5);/* print("unlock mutex\t\t#",n,"\n"); */
printf("%s%llx%s", __$deferred_param_0,__$deferred_param_1,__$deferred_param_2);/* print("free\t\t\t\t#",n,"\n"); */
return n*__$bplc_fact_INT_INT(n-1U); /* returnn*fact(n-1); */
} else {
printf("%s%llx%s", "branch b: use mem\t#", n, "\n"); /* print("branch b: use mem\t#",n,"\n"); */
printf("%s%llx%s", __$deferred_param_3,__$deferred_param_4,__$deferred_param_5);/* print("unlock mutex\t\t#",n,"\n"); */
printf("%s%llx%s", __$deferred_param_0,__$deferred_param_1,__$deferred_param_2);/* print("free\t\t\t\t#",n,"\n"); */
return 1U; /* return1; */
}; /* if(n-1){print("branch a: use mem\t#",n,"\n");returnn*fact(n-1);}else{print("branch b: use mem\t#",n,"\n");return1;} */
} else {
printf("%s%llx%s", "branch c: use mem\t#", n, "\n"); /* print("branch c: use mem\t#",n,"\n"); */
printf("%s%llx%s", __$deferred_param_0,__$deferred_param_1,__$deferred_param_2);/* print("free\t\t\t\t#",n,"\n"); */
return 1U; /* return1; */
}; /* if(n){print("lock mutex\t\t\t#",n,"\n");deferprint("unlock mutex\t\t#",n,"\n");if(n-1){print("branch a: use mem\t#",n,"\n");returnn*fact(n-1);}else{print("branch b: use mem\t#",n,"\n");return1;}}else{print("branch c: use mem\t#",n,"\n");return1;} */
}int main(){
char* __$deferred_param_0="fact(4) = ";int64_t __$deferred_param_1=__$bplc_fact_INT_INT(4U); /* deferprint("fact(4) = ",fact(4)); */
char* __$deferred_param_2="fact(0) = ";int64_t __$deferred_param_3=__$bplc_fact_INT_INT(0);char* __$deferred_param_4="\n"; /* deferprint("fact(0) = ",fact(0),"\n"); */
printf("%s%llx%s", __$deferred_param_2,__$deferred_param_3,__$deferred_param_4);/* print("fact(0) = ",fact(0),"\n"); */
printf("%s%llx", __$deferred_param_0,__$deferred_param_1);/* print("fact(4) = ",fact(4)); */
return 0; /* return0; */
}
